# NanoDet Configuration for 15-class detection
save_dir: workspace/nanodet_m
model:
  weight_averager:
    name: ExpMovingAverager
    decay: 0.9998
  arch:
    name: NanoDetPlus
    detach_epoch: 10
    backbone:
      name: ShuffleNetV2
      model_size: 0.5x
      out_stages: [2,3,4]
      activation: LeakyReLU
    fpn:
      name: GhostPAN
      in_channels: [48, 96, 192]
      out_channels: 64
      kernel_size: 5
      num_extra_level: 1
      use_depthwise: True
      activation: LeakyReLU
    head:
      name: NanoDetPlusHead
      num_classes: 15
      input_channel: 64
      feat_channels: 64
      stacked_convs: 2
      kernel_size: 5
      strides: [8, 16, 32, 64]
      activation: LeakyReLU
      reg_max: 7
      norm_cfg:
        type: BN
      loss:
        loss_qfl:
          name: QualityFocalLoss
          use_sigmoid: True
          beta: 2.0
          loss_weight: 1.0
        loss_dfl:
          name: DistributionFocalLoss
          loss_weight: 0.25
        loss_bbox:
          name: GIoULoss
          loss_weight: 2.0
    aux_head:
      name: SimpleConvHead
      num_classes: 15
      input_channel: 128
      feat_channels: 128
      stacked_convs: 4
      strides: [8, 16, 32, 64]
      activation: LeakyReLU
      reg_max: 7

class_names: &class_names [
  "bollard", "bus", "curb", "establishment", "motorcycle",
  "pedestrian lane", "person", "post", "pothole", "sidewalk",
  "signage", "stairs", "stoplight", "trash", "vehicle"
]

data:
  train:
    name: CocoDataset
    img_path: "D:/images for models - Copy/train/images"
    ann_path: "D:/images for models - Copy/train/annotations/_annotation.json"
    input_size: [320,320]
    keep_ratio: True
    pipeline:
      perspective: 0.0
      scale: [0.6, 1.4]
      stretch: [[1, 1], [1, 1]]
      rotation: 0
      shear: 0
      translate: 0.2
      flip: 0.5
      brightness: 0.2
      contrast: [0.8, 1.2]
      saturation: [0.8, 1.2]
      normalize: [[103.53, 116.28, 123.675], [57.375, 57.12, 58.395]]

  val:
    name: CocoDataset
    img_path: "D:/images for models - Copy/valid/images"
    ann_path: "D:/images for models - Copy/valid/annotations/_annotation.json"
    input_size: [320,320]
    keep_ratio: True
    pipeline:
      normalize: [[103.53, 116.28, 123.675], [57.375, 57.12, 58.395]]

device:
  gpu_ids: -1
  workers_per_gpu: 4
  batchsize_per_gpu: 8
  precision: 32

schedule:
  optimizer:
    name: AdamW
    lr: 0.001
    weight_decay: 0.05
  warmup:
    name: linear
    steps: 500
    ratio: 0.0001
  total_epochs: 100
  lr_schedule:
    name: CosineAnnealingLR
    T_max: 100
    eta_min: 0.00005
  val_intervals: 5

grad_clip: 35

evaluator:
  name: CocoDetectionEvaluator
  save_key: mAP

log:
  interval: 10

export:
  input_size: [320, 320]
  onnx:
    input_name: input
    output_name: output
    opset_version: 11
    simplify: True
  tflite:
    quantize: True  # Set to True for INT8 quant
    representative_dataset: "D:/images for models - Copy/valid/images"
    supported_ops: [TFLITE_BUILTINS]  # For float32 model